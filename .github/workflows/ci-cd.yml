name: CI/CD Pipeline for Lightsail

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: prod

    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v2

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version

      - name: Build Docker images
        run: |
          docker-compose build

      - name: List Docker images
        run: |
          docker images 

      - name: Save Docker images
        run: |
          docker save transmissao-de-videos-sob-demanda_backend -o backend-app.tar
          docker save transmissao-de-videos-sob-demanda_frontend -o frontend-app.tar

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.LIGHTSAIL_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.LIGHTSAIL_IP }} >> ~/.ssh/known_hosts

      - name: Create deploy directory
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.LIGHTSAIL_IP }} 'mkdir -p /home/ubuntu/deploy'

      - name: Copy Docker images to Lightsail
        run: |
          scp -o StrictHostKeyChecking=no backend-app.tar ubuntu@${{ secrets.LIGHTSAIL_IP }}:/home/ubuntu/deploy/
          scp -o StrictHostKeyChecking=no frontend-app.tar ubuntu@${{ secrets.LIGHTSAIL_IP }}:/home/ubuntu/deploy/
          scp -o StrictHostKeyChecking=no postgres-videostream.tar ubuntu@${{ secrets.LIGHTSAIL_IP }}:/home/ubuntu/deploy/

      - name: Deploy to Lightsail
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.LIGHTSAIL_IP }} << 'EOF'
            cd /home/ubuntu/deploy
            docker load -i backend-app.tar
            docker load -i frontend-app.tar
            docker load -i postgres-videostream.tar
            docker-compose up -d
          EOF
